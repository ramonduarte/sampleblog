//// -- LEVEL 1
//// -- Tables and References

// Creating tables


Table Tag{
  id int [pk, increment]
  name varchar
  description varchar
}

Table Status{
  id int [pk, increment]
  name varchar
  description varchar
}


Table Role{
  id int [pk, increment]
  name varchar
  description varchar
}

Table Category{
  id int [pk, increment]
  name varchar
  description varchar
}

Table Type{
  id int [pk, increment]
  name varchar
  description varchar
}


Table User as U{
  id int [pk, increment]
  id_role int
  firstname varchar
  lastname varchar
  socialname varchar
  gender varchar
  age int
  email varchar
  image varchar
  description varchar
  preferred_lang varchar
}

Ref: U.id_role > Role.id

Table Reader{
  id int [pk, increment]
  id_user int
  is_blocked boolean
  ipaddr varchar
  email varchar
}

Ref: Reader.id_user - U.id

Table Page{
  id int [pk, increment]
  id_user int 
  id_status int
  id_type int
  title varchar
  summary varchar
  content varchar
  url varchar
  datetime_added datetime
  datetime_edited datetime
  datetime_published datetime
  datetime_removed datetime
}

Ref: Page.id_user > U.id
Ref: Page.id_status > Status.id
Ref: Page.id_type > Type.id


Table Post{
  id int [pk, increment]
  id_user int 
  id_status int
  id_category int
  id_tag int
  id_type int
  title varchar
  summary varchar
  content varchar
  url varchar
  slug varchar
  datetime_added datetime
  datetime_edited datetime
  datetime_published datetime
  datetime_removed datetime
  is_comment_enabled boolean
  id_reader_reaction int
}

Ref: Post.id_user > U.id
Ref: Post.id_status > Status.id
Ref: Post.id_type > Type.id
Ref: Post.id_category > Category.id
Ref: Post.id_tag > Tag.id

Table Comment{
  id int [pk, increment]
  id_post int 
  id_reader int
  id_parent int
  id_children int
  id_status int
  title varchar
  content varchar
  datetime_added datetime
  datetime_edited datetime
  datetime_published datetime
  datetime_removed datetime
  is_comment_enabled boolean
}


Ref: Comment.id_post > Post.id
Ref: Comment.id_status > Status.id
Ref: Comment.id > Comment.id_parent
Ref: Comment.id > Comment.id_children

Table Comment_Reaction{
  id_reader int
  id_comment int
  comment_liked int
  comment_disliked int
}

Ref: Comment_Reaction.id_comment > Comment.id  
Ref: Comment_Reaction.id_reader > Reader.id


Table Post_Reaction{
  id_reader int
  id_post int
  post_liked int
  post_disliked int
}

Ref: Post_Reaction.id_post > Post.id  
Ref: Post_Reaction.id_reader > Reader.id

// Table users as U {
//   id int [pk, increment] // auto-increment
//   full_name varchar
//   created_at timestamp
//   country_code int
// }

// Table countries {
//   code int [pk]
//   name varchar
//   continent_name varchar
// }

// // Creating references
// // You can also define relaionship separately
// // > many-to-one; < one-to-many; - one-to-one
// Ref: U.country_code > countries.code  
// Ref: merchants.country_code > countries.code

// //----------------------------------------------//

// //// -- LEVEL 2
// //// -- Adding column settings

// Table order_items {
//   order_id int [ref: > orders.id] // inline relationship (many-to-one)
//   product_id int
//   quantity int [default: 1] // default value
// }

// Ref: order_items.product_id > products.id

// Table orders {
//   id int [pk] // primary key
//   user_id int [not null, unique]
//   status varchar
//   created_at varchar [note: 'When order created'] // add column note
// }

// //----------------------------------------------//

// //// -- Level 3 
// //// -- Enum, Indexes

// // Enum for 'products' table below
// Enum products_status {
//   out_of_stock
//   in_stock
//   running_low [note: 'less than 20'] // add column note
// }

// // Indexes: You can define a single or multi-column index 
// Table products {
//   id int [pk]
//   name varchar
//   merchant_id int [not null]
//   price int
//   status products_status
//   created_at datetime [default: `now()`]
  
//   Indexes {
//     (merchant_id, status) [name:'product_status']
//     id [unique]
//   }
// }

// Table merchants {
//   id int
//   country_code int
//   merchant_name varchar
  
//   "created at" varchar
//   admin_id int [ref: > U.id]
//   Indexes {
//     (id, country_code) [pk]
//   }
// }

// Table merchant_periods {
//   id int [pk]
//   merchant_id int
//   country_code int
//   start_date datetime
//   end_date datetime
// }

// Ref: products.merchant_id > merchants.id // many-to-one
// //composite foreign key
// Ref: merchant_periods.(merchant_id, country_code) > merchants.(id, country_code)
